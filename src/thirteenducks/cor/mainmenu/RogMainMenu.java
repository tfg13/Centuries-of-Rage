/*
 *  Copyright 2008, 2009, 2010:
 *   Tobias Fleig (tfg[AT]online[DOT]de),
 *   Michael Haas (mekhar[AT]gmx[DOT]de),
 *   Johannes Kattinger (johanneskattinger[AT]gmx[DOT]de)
 *
 *  - All rights reserved -
 *
 *
 *  This file is part of Centuries of Rage.
 *
 *  Centuries of Rage is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Centuries of Rage is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Centuries of Rage.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
package thirteenducks.cor.mainmenu;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
/*
 * RogMainMenu.java
 *
 * Created on 04.01.2010, 19:08:32
 */

/**
 *
 * @author Michael
 */
public class RogMainMenu extends javax.swing.JFrame {

    /* The Component that is active at the Moment: */
    Component activecomponent;
    boolean go = false;

    /** Creates new form RogMainMenu */
    public RogMainMenu(String[] args) {
        // Grafik-Systemtest

        myRunnable mr = new myRunnable(this);
        Thread t = new Thread(mr);

        t.setName("LAUNCHER");
        t.start();
    }

    /**
     * Activates a Component so the user can see it.
     * Other Components are deactivated / hided.
     */
    void activatecomponent(Component comp) {
        activecomponent.setVisible(false);
        activecomponent = comp;
        comp.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        joinserverbutton = new javax.swing.JButton();
        startserverbutton = new javax.swing.JButton();
        toolsbutton = new javax.swing.JButton();
        quitbutton = new javax.swing.JButton();
        uberpane = new javax.swing.JDesktopPane();
        startServerControl1 = new thirteenducks.cor.mainmenu.RogMainMenuStartServerControl();
        toolsControl1 = new thirteenducks.cor.mainmenu.RogMainMenuToolsControl();
        splashControl1 = new thirteenducks.cor.mainmenu.RogMainMenuSplashControl();
        joinServerControl1 = new thirteenducks.cor.mainmenu.RogMainMenuJoinServerControl();
        randomMapGeneratorControl1 = new thirteenducks.cor.mainmenu.RogMainMenuRandomMapGeneratorControl();
        rogMainMenuAbout1 = new thirteenducks.cor.mainmenu.RogMainMenuAbout();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CoR: Menu");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        joinserverbutton.setText("Join Game");
        joinserverbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinserverbuttonActionPerformed(evt);
            }
        });

        startserverbutton.setText("Start Server");
        startserverbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startserverbuttonActionPerformed(evt);
            }
        });

        toolsbutton.setText("Tools");
        toolsbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolsbuttonActionPerformed(evt);
            }
        });

        quitbutton.setText("Quit");
        quitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitbuttonActionPerformed(evt);
            }
        });

        uberpane.setBackground(new java.awt.Color(153, 153, 153));
        uberpane.setLocation(new java.awt.Point(20, 20));
        uberpane.setMinimumSize(new java.awt.Dimension(608, 249));
        uberpane.setSize(new java.awt.Dimension(608, 249));
        startServerControl1.setBounds(120, 10, 130, 40);
        uberpane.add(startServerControl1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        toolsControl1.setBounds(260, 10, 120, 30);
        uberpane.add(toolsControl1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        splashControl1.setBounds(270, 50, 100, 60);
        uberpane.add(splashControl1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        joinServerControl1.setBounds(140, 70, 100, 40);
        uberpane.add(joinServerControl1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        randomMapGeneratorControl1.setPreferredSize(new java.awt.Dimension(583, 249));
        randomMapGeneratorControl1.setBounds(230, 130, 110, 60);
        uberpane.add(randomMapGeneratorControl1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout rogMainMenuAbout1Layout = new javax.swing.GroupLayout(rogMainMenuAbout1);
        rogMainMenuAbout1.setLayout(rogMainMenuAbout1Layout);
        rogMainMenuAbout1Layout.setHorizontalGroup(
            rogMainMenuAbout1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
        );
        rogMainMenuAbout1Layout.setVerticalGroup(
            rogMainMenuAbout1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );

        rogMainMenuAbout1.setBounds(70, 140, -1, -1);
        uberpane.add(rogMainMenuAbout1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText("Map Builder");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("About");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(joinserverbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startserverbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toolsbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(quitbutton))
                    .addComponent(uberpane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(uberpane, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(joinserverbutton)
                    .addComponent(startserverbutton)
                    .addComponent(toolsbutton)
                    .addComponent(jButton1)
                    .addComponent(quitbutton)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

//--------------------------------------------------------------------------------
//  Component Control
//  When a Button is pressed, the corresponding ControlComponent is activated:
//--------------------------------------------------------------------------------
    private void joinserverbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinserverbuttonActionPerformed
        rogMainMenuAbout1.interrupt();
        activatecomponent(joinServerControl1);
    }//GEN-LAST:event_joinserverbuttonActionPerformed

    private void startserverbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startserverbuttonActionPerformed
        rogMainMenuAbout1.interrupt();
        activatecomponent(startServerControl1);
    }//GEN-LAST:event_startserverbuttonActionPerformed

    private void toolsbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolsbuttonActionPerformed
        rogMainMenuAbout1.interrupt();
        activatecomponent(toolsControl1);
    }//GEN-LAST:event_toolsbuttonActionPerformed
//--------------------------------------------------------------------------------
//  End of Component Control
//--------------------------------------------------------------------------------

    /**
     * Code for the Quit-Button:
     */
    private void quitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitbuttonActionPerformed
        rogMainMenuAbout1.interrupt();
        System.exit(0);
    }//GEN-LAST:event_quitbuttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        activatecomponent(randomMapGeneratorControl1);
        rogMainMenuAbout1.interrupt();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        rogMainMenuAbout1.interrupt();
        activatecomponent(rogMainMenuAbout1);
        rogMainMenuAbout1.play();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(final String[] args) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new RogMainMenu(args).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private thirteenducks.cor.mainmenu.RogMainMenuJoinServerControl joinServerControl1;
    private javax.swing.JButton joinserverbutton;
    private javax.swing.JButton quitbutton;
    private thirteenducks.cor.mainmenu.RogMainMenuRandomMapGeneratorControl randomMapGeneratorControl1;
    private thirteenducks.cor.mainmenu.RogMainMenuAbout rogMainMenuAbout1;
    private thirteenducks.cor.mainmenu.RogMainMenuSplashControl splashControl1;
    private thirteenducks.cor.mainmenu.RogMainMenuStartServerControl startServerControl1;
    private javax.swing.JButton startserverbutton;
    private thirteenducks.cor.mainmenu.RogMainMenuToolsControl toolsControl1;
    private javax.swing.JButton toolsbutton;
    private javax.swing.JDesktopPane uberpane;
    // End of variables declaration//GEN-END:variables

    private class myRunnable implements Runnable {

        RogMainMenu mainmenureference;

        public myRunnable(RogMainMenu mainmenu) {
            mainmenureference = mainmenu;
        }

        @Override
        public void run() {
            //preInitGraphics();
            try {
            initComponents();
            } catch (java.lang.NoClassDefFoundError er) {
                JOptionPane.showMessageDialog(new JFrame(), "Cannot find library: lib/lwjgl.jar", "CoR:NoLibs", JOptionPane.ERROR_MESSAGE);
                System.exit(2);
            }

            joinServerControl1.setMainMenuReference(mainmenureference);

            toolsControl1.setSize(uberpane.getSize());
            toolsControl1.setLocation(0, 0);

            startServerControl1.setSize(uberpane.getSize());
            startServerControl1.setLocation(0, 0);

            splashControl1.setSize(uberpane.getSize());
            splashControl1.setLocation(0, 0);

            joinServerControl1.setSize(uberpane.getSize());
            joinServerControl1.setLocation(0, 0);

            randomMapGeneratorControl1.setSize(uberpane.getSize());
            randomMapGeneratorControl1.setLocation(0, 0);

            rogMainMenuAbout1.setSize(uberpane.getSize());
            rogMainMenuAbout1.setLocation(0, 0);



            /* Add more ControlComponents here */

            // Deactivate(hide) all Components:
            for (int i = 0; i < uberpane.getComponentCount(); i++) {
                uberpane.getComponent(i).setVisible(false);
            }

            activecomponent = splashControl1;
            activatecomponent(splashControl1);
        }
    }
}// Klassenende

